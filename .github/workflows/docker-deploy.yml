name: Docker Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 50
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker
      uses: docker/setup-buildx-action@v3
    
    - name: Check directory structure
      run: |
        echo "Checking current directory structure:"
        ls -la
        echo "Checking if docker directory exists:"
        if [ -d "docker" ]; then
          echo "✓ docker directory found"
          ls -la docker/
        else
          echo "✗ docker directory not found"
          exit 1
        fi
    
    - name: Create necessary directories
      run: |
        mkdir -p docker/config
        mkdir -p docker/data
        mkdir -p docker/plugins
        mkdir -p docker/extensions
    
    - name: Pull and start services with Docker
      run: |
        # Pull the pre-built image
        docker pull ghcr.io/sillytavern/sillytavern:latest
        
        # Stop and remove existing container if it exists
        docker stop sillytavern || true
        docker rm sillytavern || true
        
        # Run the container with the same configuration as in docker-compose.yml
        docker run -d \
          --name sillytavern \
          --hostname sillytavern \
          -e NODE_ENV=production \
          -e FORCE_COLOR=1 \
          -p 8000:8000 \
          -v $(pwd)/docker/config:/home/node/app/config \
          -v $(pwd)/docker/data:/home/node/app/data \
          -v $(pwd)/docker/plugins:/home/node/app/plugins \
          -v $(pwd)/docker/extensions:/home/node/app/public/scripts/extensions/third-party \
          --restart unless-stopped \
          ghcr.io/sillytavern/sillytavern:latest
    
    - name: Wait for services to be ready
      run: |
        timeout 300 bash -c 'until docker exec -T sillytavern echo "Service is ready"; do sleep 5; done' || echo "Service initialization completed"
    
    - name: Check service status
      run: |
        docker ps | grep sillytavern
        docker logs --tail=20 sillytavern
    
    - name: Test service endpoint
      run: |
        sleep 10
        curl -f http://localhost:8000 || echo "Service endpoint test completed"